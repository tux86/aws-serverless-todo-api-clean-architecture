name: Build and deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
env:
  NODE_VERSION: 18.x

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: pnpm
#      - name: Setup pnpm cache
#        uses: actions/cache@v3
#        with:
#          path: ~/.pnpm-store
#          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
#          restore-keys: |
#            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm i --no-frozen-lockfile

#      - name: Run lint
#        run: pnpm run lint

      - name: Run build
        run: pnpm run build

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: build
    environment:
      name: Development
      #url: https://example.com
    outputs:
      url: ${{ steps.deploy.outputs.url }}
    env:
      # AWS CREDENTIALS VARIABLES
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      # *********** INFRA VARIABLES ***********
      AWS_REGION: eu-west-1
      # Cognito User Pool token validity config
      # ACCESS_TOKEN_VALIDITY in hours
      ACCESS_TOKEN_VALIDITY: 24
      # ID_TOKEN_VALIDITY in hours
      ID_TOKEN_VALIDITY: 24
      # REFRESH_TOKEN_VALIDITY in days
      REFRESH_TOKEN_VALIDITY: 30
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: pnpm
#      - name: Setup pnpm cache
#        uses: actions/cache@v3
#        with:
#          path: ~/.pnpm-store
#          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
#          restore-keys: |
#            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm i --no-frozen-lockfile

      - name: Deploy to AWS
        run: npx serverless deploy --verbose

      - name: Display information about deployed services
        run: npx serverless info > serverless_info.txt

      - name: Get environment base URL
        run: url=$(grep -o 'https\?://[^[:space:]/]*' serverless_info.txt | head -n 1)

      - name: Display outputs of deployed services
        run: npx serverless outputs
